[{"/home/jim/projects/space/src/index.js":"1","/home/jim/projects/space/src/App.js":"2","/home/jim/projects/space/src/reportWebVitals.js":"3","/home/jim/projects/space/src/classes/System.js":"4","/home/jim/projects/space/src/classes/Planet.js":"5","/home/jim/projects/space/src/containers/SystemContainer.js":"6","/home/jim/projects/space/src/components/SystemComponent.js":"7","/home/jim/projects/space/src/classes/Orbit.js":"8","/home/jim/projects/space/src/components/PlanetComponent.js":"9","/home/jim/projects/space/src/classes/Bezier.js":"10","/home/jim/projects/space/src/classes/Entity.js":"11","/home/jim/projects/space/src/components/ShipComponent.js":"12","/home/jim/projects/space/src/classes/Ship.js":"13","/home/jim/projects/space/src/classes/Path.js":"14","/home/jim/projects/space/src/classes/Vector.js":"15","/home/jim/projects/space/src/classes/Stationary.js":"16","/home/jim/projects/space/src/classes/Direction.js":"17","/home/jim/projects/space/src/classes/Journey.js":"18","/home/jim/projects/space/src/classes/CircularTurn.js":"19"},{"size":500,"mtime":1628849837520,"results":"20","hashOfConfig":"21"},{"size":218,"mtime":1629018025830,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1628849837520,"results":"23","hashOfConfig":"21"},{"size":6957,"mtime":1631268013822,"results":"24","hashOfConfig":"21"},{"size":86,"mtime":1630663964651,"results":"25","hashOfConfig":"21"},{"size":779,"mtime":1630823443450,"results":"26","hashOfConfig":"21"},{"size":783,"mtime":1631267996282,"results":"27","hashOfConfig":"21"},{"size":1862,"mtime":1631010404693,"results":"28","hashOfConfig":"21"},{"size":581,"mtime":1631084005640,"results":"29","hashOfConfig":"21"},{"size":4324,"mtime":1631083988150,"results":"30","hashOfConfig":"21"},{"size":982,"mtime":1631082604870,"results":"31","hashOfConfig":"21"},{"size":1969,"mtime":1631267972012,"results":"32","hashOfConfig":"21"},{"size":82,"mtime":1630668440451,"results":"33","hashOfConfig":"21"},{"size":1029,"mtime":1631083803100,"results":"34","hashOfConfig":"21"},{"size":1031,"mtime":1631181327260,"results":"35","hashOfConfig":"21"},{"size":333,"mtime":1630911891140,"results":"36","hashOfConfig":"21"},{"size":913,"mtime":1631265714722,"results":"37","hashOfConfig":"21"},{"size":1691,"mtime":1631084477430,"results":"38","hashOfConfig":"21"},{"size":1492,"mtime":1631265619632,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"136x84i",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jim/projects/space/src/index.js",[],["81","82"],"/home/jim/projects/space/src/App.js",[],"/home/jim/projects/space/src/reportWebVitals.js",[],"/home/jim/projects/space/src/classes/System.js",["83"],"/home/jim/projects/space/src/classes/Planet.js",[],"/home/jim/projects/space/src/containers/SystemContainer.js",[],"/home/jim/projects/space/src/components/SystemComponent.js",[],"/home/jim/projects/space/src/classes/Orbit.js",[],"/home/jim/projects/space/src/components/PlanetComponent.js",[],"/home/jim/projects/space/src/classes/Bezier.js",["84"],"import Path from './Path'\nimport Vector from './Vector'\nimport Direction from './Direction'\n\nfunction getPosition(p0, p1, t) {\n    const term1 = Vector.multiply(1 - t, p0)\n    const term2 = Vector.multiply(t, p1)\n    return Vector.add(term1, term2)\n}\n\nclass Bezier extends Path {\n\n    constructor(startTime, endTime, ...points) {\n        super()\n        this.startTime = startTime\n        this.endTime = endTime\n        if (points.length === 1) {\n            this.initial = points[0]\n            this.final = points[0]\n        } else {\n            this.initial = new Bezier(startTime, endTime, ...points.slice(0, points.length - 1))\n            this.final = new Bezier(startTime, endTime, ...points.slice(1, points.length))\n        }\n    }\n\n    position(time) {\n        if (time < this.startTime) {\n            time = this.startTime\n        }\n        if (time > this.endTime) {\n            time = this.endTime\n        }\n        const t = (time - this.startTime) / (this.endTime - this.startTime)\n        return this.position_by_t(t)\n    }\n\n    position_by_t(t) {\n        if (this.initial === this.final) {\n            return this.initial\n        }\n        const p0 = this.initial.position_by_t(t)\n        const p1 = this.final.position_by_t(t)\n        return getPosition(p0, p1, t)\n    }\n\n    get initialVelocity() {\n        return this.velocity(this.startTime)\n    }\n\n    get initialSpeed() {\n        return this.speed(this.startTime)\n    }\n\n    get finalVelocity() {\n        return this.velocity(this.endTime)\n    }\n\n    get finalSpeed() {\n        return this.speed(this.endTime - 1)\n    }\n\n    get maxSpeed() {\n        let return_value = 0\n        for (let time = this.startTime; time <= this.endTime; time++) {\n            return_value = Math.max(return_value, this.speed(time))\n        }\n        return return_value\n    }\n\n    static newLinearFromEndTime(source, destination, startTime, endTime) {\n        const p0 = [...source.position(startTime)]\n        const p1 = [...destination.position(endTime)]\n        return new this(startTime, endTime, p0, p1)\n    }\n\n    static newQuadraticFromEndTime(source, destination, startTime, endTime) {\n        const duration = endTime - startTime\n        const p0 = source.position(startTime)\n        const initialV = source.velocity(startTime)\n        const p0p1 = Vector.multiply(duration / 2, initialV)\n        const p1 = Vector.add(p0, p0p1)\n        const p2 = destination.position(endTime)\n        return new this(startTime, endTime, p0, p1, p2)\n    }\n\n    static newCubicFromEndTime(source, destination, startTime, endTime) {\n        const duration = endTime - startTime\n        const p0 = source.position(startTime)\n        const p1 = this.outgoingPoint(source, startTime, duration)\n        const p3 = destination.position(endTime)\n        const p2 = this.incomingPoint(destination, endTime, duration)\n        const p15 = this.outgoingPoint(source, startTime + 450, duration)\n        const p175 = this.incomingPoint(destination, endTime - 450, duration)\n        // const p11 = Vector.add(p1, Vector.multiply(5, p0p1))\n        // const p21 = Vector.subtract(p2, Vector.multiply(5, p2p3))\n        // const p15 = Vector.multiply(0.5, Vector.add(p11, p21))\n        return new this(startTime, endTime, p0, p1, p15, p175, p2, p3)\n\n    }\n\n    static outgoingPoint(source, startTime, duration) {\n        const p0 = source.position(startTime)\n        const initialV = source.velocity(startTime)\n        const p0p1 = Vector.multiply(duration / 3, initialV)\n        return Vector.add(p0, p0p1)\n    }\n\n    static incomingPoint(destination, endTime, duration) {\n        const p3 = destination.position(endTime)\n        const finalV = destination.velocity(endTime)\n        const p2p3 = Vector.multiply(duration / 3, finalV)\n        return Vector.subtract(p3, p2p3)\n    }\n\n    // static turn(source, destination, startTime, endTime, overallEndTime) {\n    //     const turnRadius = 100\n    //     const initialDirection = source.direction(startTime)\n    //     const finalDirection = Vector.subtract(destination.position(overallEndTime), source.position(startTime), )\n    //     const directionDifference = Direction.subtract(finalDirection, initialDirection)\n    //     const p3x = 2 * turnRadius * (1 - directionDifference / Math.PI)\n        \n\n        \n    // }\n\n\n}\n\nexport default Bezier","/home/jim/projects/space/src/classes/Entity.js",[],"/home/jim/projects/space/src/components/ShipComponent.js",["85","86"],"/home/jim/projects/space/src/classes/Ship.js",[],"/home/jim/projects/space/src/classes/Path.js",[],"/home/jim/projects/space/src/classes/Vector.js",[],"/home/jim/projects/space/src/classes/Stationary.js",[],"/home/jim/projects/space/src/classes/Direction.js",[],"/home/jim/projects/space/src/classes/Journey.js",["87","88","89"],"import Bezier from './Bezier'\nimport Vector from './Vector'\nimport Direction from './Direction'\n\nclass Journey {\n\n    static journey(origin, destination, t0, t3) {\n        const handling = 100\n        const acceleration = 1\n\n        const v0 = origin.velocity(t0)\n        const direction0 = Vector.direction(v0)\n\n        const line = Vector.subtract(destination.position(t3), origin.position(t0))\n        const unitLine = Vector.unitVector(line)\n        const lineDirection = Vector.direction(line)\n        const p0 = origin.position(t0)\n        const p1 = Vector.build(origin.position(t0), origin.direction(t0), handling)\n\n        const p7 = destination.position(t3)\n        const p6 = Vector.build(destination.position(t3), destination.negativeDirection(t3), handling)\n\n        const turn1Angle = Direction.subtract(lineDirection, direction0)\n        let p2\n        if (turn1Angle <= Math.PI / 2 || turn1Angle >= 3*Math.PI / 2) {\n            p2 = p1\n        } else if (turn1Angle < Math.PI) {\n            const rotatedUnitLine = Vector.rotate(unitLine, 3 * Math.PI / 2)\n            const p1p2L = handling * (2 * turn1Angle / Math.PI - 1)\n            const p1p2 = Vector.multiply(p1p2L, rotatedUnitLine)\n            p2 = Vector.add(p1, p1p2)\n        } else { \n            const rotatedUnitLine = Vector.rotate(unitLine, Math.PI / 2)\n            const p1p2L = handling * (3 - 2 * turn1Angle / Math.PI)\n            const p1p2 = Vector.multiply(p1p2L, rotatedUnitLine)\n            p2 = Vector.add(p1, p1p2)\n        }\n\n        console.log({t0, t3, p0, p1, p2})\n\n        return new Bezier(t0, t3, p0, p1, p2)\n\n        // const turn2Angle = Direction.subtract()\n\n    }\n\n\n}\n\nexport default Journey","/home/jim/projects/space/src/classes/CircularTurn.js",["90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":15},{"ruleId":"96","severity":1,"message":"100","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":17},{"ruleId":"96","severity":1,"message":"101","line":39,"column":11,"nodeType":"98","messageId":"99","endLine":39,"endColumn":22},{"ruleId":"96","severity":1,"message":"102","line":53,"column":11,"nodeType":"98","messageId":"99","endLine":53,"endColumn":23},{"ruleId":"96","severity":1,"message":"103","line":9,"column":15,"nodeType":"98","messageId":"99","endLine":9,"endColumn":27},{"ruleId":"96","severity":1,"message":"104","line":20,"column":15,"nodeType":"98","messageId":"99","endLine":20,"endColumn":17},{"ruleId":"96","severity":1,"message":"105","line":21,"column":15,"nodeType":"98","messageId":"99","endLine":21,"endColumn":17},{"ruleId":"106","severity":1,"message":"107","line":15,"column":86,"nodeType":"108","messageId":"109","endLine":15,"endColumn":88},{"ruleId":"106","severity":1,"message":"107","line":21,"column":32,"nodeType":"108","messageId":"109","endLine":21,"endColumn":34},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Journey' is defined but never used.","Identifier","unusedVar","'Direction' is defined but never used.","'planetStyle' is assigned a value but never used.","'planetStyle2' is assigned a value but never used.","'acceleration' is assigned a value but never used.","'p7' is assigned a value but never used.","'p6' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]