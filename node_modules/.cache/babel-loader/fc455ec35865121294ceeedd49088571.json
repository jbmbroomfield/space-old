{"ast":null,"code":"import Planet from './Planet';\nimport Orbit from './Orbit';\n\nclass System {\n  constructor(galaxy, radius) {\n    this.galaxy = galaxy;\n    this.radius = radius;\n    this.centre = [radius / 2, radius / 2];\n    this.planets = [];\n    this.steps = 0;\n    this.gravitationalConstant = 1 / 50;\n  }\n\n  step() {\n    this.steps++;\n\n    for (const planet of this.planets) {\n      planet.color !== 'yellow' && planet.step();\n    }\n\n    return this;\n  }\n\n  new_planet(color, radius, mass, x, y) {\n    const planet = new Planet(this, color, radius, mass, x, y);\n    this.planets.push(planet);\n    return planet;\n  }\n\n}\n\nexport default System;\nconst baseSystem = new System('Galaxy', 400);\nconst sun = baseSystem.new_planet('yellow', 5, 5000, 200, 200);\nconst diff = 0; // const planet = baseSystem.new_planet('red', 2, 10)\n// planet.orbit = new Orbit(sun, [75, 60], 500, 0, 0, 1)\n// const planet2 = baseSystem.new_planet('orange', 2, 10)\n// planet2.orbit = new Orbit(sun, [75, 60], 500, 0, 90, 1)\n// const planet3 = baseSystem.new_planet('green', 2, 10)\n// planet3.orbit = new Orbit(sun, [75, 60], 500, 0, 180, 1)\n// const planet4 = baseSystem.new_planet('blue', 2, 10)\n// planet4.orbit = new Orbit(sun, [75, 60], 500, 0, 270, 1)\n// const planet5 = baseSystem.new_planet('white', 2, 10)\n// planet5.orbit = new Orbit(sun, [75, 60], 500, 0, 45, 1)\n// const planet6 = baseSystem.new_planet('brown', 2, 10)\n// planet6.orbit = new Orbit(sun, [75, 60], 500, 0, 135, 1)\n// const planet7 = baseSystem.new_planet('pink', 2, 10)\n// planet7.orbit = new Orbit(sun, [75, 60], 500, 0, 225, 1)\n// const planet8 = baseSystem.new_planet('purple', 2, 10)\n// planet8.orbit = new Orbit(sun, [75, 60], 500, 0, 315, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet2, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet3, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet4, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet5, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet6, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet7, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet8, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet2, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet3, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet4, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet5, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet6, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet7, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet8, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('orange', 0.8).orbit = new Orbit(planet, 20, 400, 0)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet2, 10, 200, 0, -1)\n// baseSystem.new_planet('orange', 0.8).orbit = new Orbit(planet2, 20, 400, 0)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet3, 10, 200, 0, -1)\n// baseSystem.new_planet('orange', 0.8).orbit = new Orbit(planet3, 20, 400, 0)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet4, 10, 200, 0, -1)\n// baseSystem.new_planet('orange', 0.8).orbit = new Orbit(planet4, 20, 400, 0)\n\nexport { baseSystem };","map":{"version":3,"sources":["/home/jim/projects/space/src/classes/System.js"],"names":["Planet","Orbit","System","constructor","galaxy","radius","centre","planets","steps","gravitationalConstant","step","planet","color","new_planet","mass","x","y","push","baseSystem","sun","diff"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,MAAN,CAAa;AAETC,EAAAA,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;AACxB,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAc,CAACD,MAAM,GAAG,CAAV,EAAaA,MAAM,GAAG,CAAtB,CAAd;AACA,SAAKE,OAAL,GAAe,EAAf;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,qBAAL,GAA6B,IAAE,EAA/B;AACH;;AAEDC,EAAAA,IAAI,GAAG;AACH,SAAKF,KAAL;;AACA,SAAK,MAAMG,MAAX,IAAqB,KAAKJ,OAA1B,EAAmC;AAC/BI,MAAAA,MAAM,CAACC,KAAP,KAAiB,QAAjB,IAA6BD,MAAM,CAACD,IAAP,EAA7B;AACH;;AACD,WAAO,IAAP;AACH;;AAEDG,EAAAA,UAAU,CAACD,KAAD,EAAQP,MAAR,EAAgBS,IAAhB,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;AAClC,UAAML,MAAM,GAAG,IAAIX,MAAJ,CAAW,IAAX,EAAiBY,KAAjB,EAAwBP,MAAxB,EAAgCS,IAAhC,EAAsCC,CAAtC,EAAyCC,CAAzC,CAAf;AACA,SAAKT,OAAL,CAAaU,IAAb,CAAkBN,MAAlB;AACA,WAAOA,MAAP;AACH;;AAvBQ;;AA2Bb,eAAeT,MAAf;AAEA,MAAMgB,UAAU,GAAG,IAAIhB,MAAJ,CAAW,QAAX,EAAqB,GAArB,CAAnB;AAEA,MAAMiB,GAAG,GAAGD,UAAU,CAACL,UAAX,CAAsB,QAAtB,EAAgC,CAAhC,EAAmC,IAAnC,EAAyC,GAAzC,EAA8C,GAA9C,CAAZ;AAEA,MAAMO,IAAI,GAAG,CAAb,C,CAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;AAIA,SAASF,UAAT","sourcesContent":["import Planet from './Planet'\nimport Orbit from './Orbit'\n\nclass System {\n\n    constructor(galaxy, radius) {\n        this.galaxy = galaxy\n        this.radius = radius\n        this.centre = [radius / 2, radius / 2]\n        this.planets = []\n        this.steps = 0\n        this.gravitationalConstant = 1/50\n    }\n\n    step() {\n        this.steps++\n        for (const planet of this.planets) {\n            planet.color !== 'yellow' && planet.step() \n        }\n        return this\n    }\n\n    new_planet(color, radius, mass, x, y) {\n        const planet = new Planet(this, color, radius, mass, x, y)\n        this.planets.push(planet)\n        return planet\n    }\n\n}\n\nexport default System\n\nconst baseSystem = new System('Galaxy', 400)\n\nconst sun = baseSystem.new_planet('yellow', 5, 5000, 200, 200)\n\nconst diff = 0\n\n// const planet = baseSystem.new_planet('red', 2, 10)\n// planet.orbit = new Orbit(sun, [75, 60], 500, 0, 0, 1)\n\n// const planet2 = baseSystem.new_planet('orange', 2, 10)\n// planet2.orbit = new Orbit(sun, [75, 60], 500, 0, 90, 1)\n\n// const planet3 = baseSystem.new_planet('green', 2, 10)\n// planet3.orbit = new Orbit(sun, [75, 60], 500, 0, 180, 1)\n\n// const planet4 = baseSystem.new_planet('blue', 2, 10)\n// planet4.orbit = new Orbit(sun, [75, 60], 500, 0, 270, 1)\n\n// const planet5 = baseSystem.new_planet('white', 2, 10)\n// planet5.orbit = new Orbit(sun, [75, 60], 500, 0, 45, 1)\n\n// const planet6 = baseSystem.new_planet('brown', 2, 10)\n// planet6.orbit = new Orbit(sun, [75, 60], 500, 0, 135, 1)\n\n// const planet7 = baseSystem.new_planet('pink', 2, 10)\n// planet7.orbit = new Orbit(sun, [75, 60], 500, 0, 225, 1)\n\n// const planet8 = baseSystem.new_planet('purple', 2, 10)\n// planet8.orbit = new Orbit(sun, [75, 60], 500, 0, 315, 1)\n\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet2, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet3, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet4, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet5, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet6, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet7, [10, 10], 100, 0, 0, 1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet8, [10, 10], 100, 0, 0, 1)\n\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet2, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet3, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet4, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet5, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet6, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet7, [10, 10], 100, 0, 0, -1)\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet8, [10, 10], 100, 0, 0, -1)\n\n// baseSystem.new_planet('orange', 0.8).orbit = new Orbit(planet, 20, 400, 0)\n\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet2, 10, 200, 0, -1)\n\n// baseSystem.new_planet('orange', 0.8).orbit = new Orbit(planet2, 20, 400, 0)\n\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet3, 10, 200, 0, -1)\n\n// baseSystem.new_planet('orange', 0.8).orbit = new Orbit(planet3, 20, 400, 0)\n\n// baseSystem.new_planet('green', 1).orbit = new Orbit(planet4, 10, 200, 0, -1)\n\n// baseSystem.new_planet('orange', 0.8).orbit = new Orbit(planet4, 20, 400, 0)\n\n\n\nexport { baseSystem }"]},"metadata":{},"sourceType":"module"}