{"ast":null,"code":"function directionYZero(x) {\n  if (x === 0) {\n    return 0;\n  }\n\n  if (x > 0) {\n    return Math.PI / 2;\n  }\n\n  return Math.PI * 3 / 2;\n}\n\nfunction directionFromVelocity(x, y) {\n  if (y === 0) {\n    return directionYZero(x);\n  }\n\n  let result = Math.atan(x / y);\n\n  if (y < 0) {\n    result += Math.PI;\n  }\n\n  return result;\n}\n\nclass Entity {\n  constructor(system, color, radius, mass, x = null, y = null) {\n    this.system = system;\n    this.mass = mass;\n    this.color = color;\n    this.radius = radius;\n    this.position = [x, y];\n    this.previousPosition = [x, y];\n  }\n\n  set position(position) {\n    this.previousPosition = this.position;\n    [this.x, this.y] = position;\n  }\n\n  get position() {\n    return [this.x, this.y];\n  }\n\n  set previousPosition(position) {\n    [this.previousX, this.previousY] = position;\n  }\n\n  get previousPosition() {\n    return [this.previousX, this.previousY];\n  }\n\n  get velocity() {\n    return [this.x - this.previousX, this.y - this.previousY];\n  }\n\n  get direction() {\n    return directionFromVelocity(...this.velocity);\n  }\n\n  step() {\n    const steps = this.system.steps;\n\n    if (this.path) {\n      this.position = this.path.position(steps);\n      console.log(this.path.velocity(steps));\n    }\n  }\n\n}\n\nexport default Entity;","map":{"version":3,"sources":["/home/jim/projects/space/src/classes/Entity.js"],"names":["directionYZero","x","Math","PI","directionFromVelocity","y","result","atan","Entity","constructor","system","color","radius","mass","position","previousPosition","previousX","previousY","velocity","direction","step","steps","path","console","log"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,CAAxB,EAA2B;AACvB,MAAIA,CAAC,KAAK,CAAV,EAAa;AACT,WAAO,CAAP;AACH;;AACD,MAAIA,CAAC,GAAG,CAAR,EAAW;AACP,WAAOC,IAAI,CAACC,EAAL,GAAQ,CAAf;AACH;;AACD,SAAOD,IAAI,CAACC,EAAL,GAAQ,CAAR,GAAU,CAAjB;AACH;;AAED,SAASC,qBAAT,CAA+BH,CAA/B,EAAiCI,CAAjC,EAAoC;AAChC,MAAIA,CAAC,KAAK,CAAV,EAAa;AACT,WAAOL,cAAc,CAACC,CAAD,CAArB;AACH;;AACD,MAAIK,MAAM,GAAGJ,IAAI,CAACK,IAAL,CAAUN,CAAC,GAACI,CAAZ,CAAb;;AACA,MAAIA,CAAC,GAAG,CAAR,EAAW;AACPC,IAAAA,MAAM,IAAIJ,IAAI,CAACC,EAAf;AACH;;AACD,SAAOG,MAAP;AACH;;AAED,MAAME,MAAN,CAAa;AAETC,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BZ,CAAC,GAAG,IAAlC,EAAwCI,CAAC,GAAG,IAA5C,EAAkD;AACzD,SAAKK,MAAL,GAAcA,MAAd;AACA,SAAKG,IAAL,GAAYA,IAAZ;AACA,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKE,QAAL,GAAgB,CAACb,CAAD,EAAII,CAAJ,CAAhB;AACA,SAAKU,gBAAL,GAAwB,CAACd,CAAD,EAAII,CAAJ,CAAxB;AACH;;AAEW,MAARS,QAAQ,CAACA,QAAD,EAAW;AACnB,SAAKC,gBAAL,GAAwB,KAAKD,QAA7B;AACA,KAAC,KAAKb,CAAN,EAAS,KAAKI,CAAd,IAAmBS,QAAnB;AACH;;AAEW,MAARA,QAAQ,GAAG;AACX,WAAO,CAAC,KAAKb,CAAN,EAAS,KAAKI,CAAd,CAAP;AACH;;AAEmB,MAAhBU,gBAAgB,CAACD,QAAD,EAAW;AAC3B,KAAC,KAAKE,SAAN,EAAiB,KAAKC,SAAtB,IAAmCH,QAAnC;AACH;;AAEmB,MAAhBC,gBAAgB,GAAG;AACnB,WAAO,CAAC,KAAKC,SAAN,EAAiB,KAAKC,SAAtB,CAAP;AACH;;AAEW,MAARC,QAAQ,GAAG;AACX,WAAO,CAAC,KAAKjB,CAAL,GAAS,KAAKe,SAAf,EAA0B,KAAKX,CAAL,GAAS,KAAKY,SAAxC,CAAP;AACH;;AAEY,MAATE,SAAS,GAAG;AACZ,WAAOf,qBAAqB,CAAC,GAAG,KAAKc,QAAT,CAA5B;AACH;;AAEDE,EAAAA,IAAI,GAAG;AACH,UAAMC,KAAK,GAAG,KAAKX,MAAL,CAAYW,KAA1B;;AACA,QAAI,KAAKC,IAAT,EAAe;AACX,WAAKR,QAAL,GAAgB,KAAKQ,IAAL,CAAUR,QAAV,CAAmBO,KAAnB,CAAhB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,IAAL,CAAUJ,QAAV,CAAmBG,KAAnB,CAAZ;AACH;AACJ;;AA1CQ;;AA8Cb,eAAeb,MAAf","sourcesContent":["function directionYZero(x) {\n    if (x === 0) {\n        return 0\n    }\n    if (x > 0) {\n        return Math.PI/2\n    }\n    return Math.PI*3/2\n}\n\nfunction directionFromVelocity(x,y) {\n    if (y === 0) {\n        return directionYZero(x)\n    }\n    let result = Math.atan(x/y)\n    if (y < 0) {\n        result += Math.PI\n    }\n    return result\n}\n\nclass Entity {\n\n    constructor(system, color, radius, mass, x = null, y = null) {\n        this.system = system\n        this.mass = mass\n        this.color = color\n        this.radius = radius\n        this.position = [x, y]\n        this.previousPosition = [x, y]\n    }\n\n    set position(position) {\n        this.previousPosition = this.position;\n        [this.x, this.y] = position\n    }\n\n    get position() {\n        return [this.x, this.y]\n    }\n\n    set previousPosition(position) {\n        [this.previousX, this.previousY] = position\n    }\n\n    get previousPosition() {\n        return [this.previousX, this.previousY]\n    }\n\n    get velocity() {\n        return [this.x - this.previousX, this.y - this.previousY]\n    }\n\n    get direction() {\n        return directionFromVelocity(...this.velocity)\n    }\n\n    step() {\n        const steps = this.system.steps\n        if (this.path) {\n            this.position = this.path.position(steps)\n            console.log(this.path.velocity(steps))\n        }\n    }\n\n}\n\nexport default Entity"]},"metadata":{},"sourceType":"module"}