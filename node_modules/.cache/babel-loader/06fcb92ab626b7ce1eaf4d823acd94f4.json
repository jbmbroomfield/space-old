{"ast":null,"code":"var _jsxFileName = \"/home/jim/projects/space/src/components/SystemDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport EntityDisplay from './EntityDisplay';\nimport System, { baseSystem } from '../classes/System';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SystemDisplay = props => {\n  _s();\n\n  const [system, setSystem] = useState(baseSystem);\n  const [planets, setPlanets] = useState(baseSystem.planets);\n  const entities = planets.map((planet, index) => /*#__PURE__*/_jsxDEV(EntityDisplay, {\n    entity: planet\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this)); // useEffect(() => {\n  //     // setSystem(system => {\n  //     //     system.new_planet('yellow', 9, 100, 100)\n  //     //     system.new_planet('red', 5, 120, 80)\n  //     //     console.log(system.planets)\n  //     //     return system\n  //     // })\n  //     const interval = setInterval(() => {\n  //         setSystem(system => system.step())\n  //         setPlanets(system.planets)\n  //         console.log(system.planets.map(planet => planet.position))\n  //     },500)\n  //     return () => clearInterval(interval)\n  // }, [])\n\n  const intervalFunc = () => {\n    setSystem(system => system.step());\n    setPlanets(system.planets);\n    this.forceUpdate();\n  };\n\n  const interval = setInterval(intervalFunc, 500);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space\",\n    children: entities\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SystemDisplay, \"jck88H2czmWfHYgXxNgPOv84WX0=\");\n\n_c = SystemDisplay;\nexport default SystemDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"SystemDisplay\");","map":{"version":3,"sources":["/home/jim/projects/space/src/components/SystemDisplay.js"],"names":["React","useState","useEffect","EntityDisplay","System","baseSystem","SystemDisplay","props","system","setSystem","planets","setPlanets","entities","map","planet","index","intervalFunc","step","forceUpdate","interval","setInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,mBAAnC;;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAE3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACI,UAAD,CAApC;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACI,UAAU,CAACK,OAAZ,CAAtC;AAGA,QAAME,QAAQ,GAAGF,OAAO,CAACG,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACzB,QAAC,aAAD;AAA2B,IAAA,MAAM,EAAED;AAAnC,KAAoBC,KAApB;AAAA;AAAA;AAAA;AAAA,UADa,CAAjB,CAP2B,CAW3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACvBP,IAAAA,SAAS,CAACD,MAAM,IAAIA,MAAM,CAACS,IAAP,EAAX,CAAT;AACAN,IAAAA,UAAU,CAACH,MAAM,CAACE,OAAR,CAAV;AACA,SAAKQ,WAAL;AACH,GAJD;;AAMA,QAAMC,QAAQ,GAAGC,WAAW,CAACJ,YAAD,EAAc,GAAd,CAA5B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCD;;GAAMN,a;;KAAAA,a;AA0CN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport EntityDisplay from './EntityDisplay'\nimport System, { baseSystem } from '../classes/System'\n\nconst SystemDisplay = props => {\n\n    const [system, setSystem] = useState(baseSystem)\n\n    const [planets, setPlanets] = useState(baseSystem.planets)\n\n\n    const entities = planets.map((planet, index) =>(\n        <EntityDisplay key={index} entity={planet} />\n    ))\n\n    // useEffect(() => {\n    //     // setSystem(system => {\n    //     //     system.new_planet('yellow', 9, 100, 100)\n    //     //     system.new_planet('red', 5, 120, 80)\n    //     //     console.log(system.planets)\n    //     //     return system\n    //     // })\n    //     const interval = setInterval(() => {\n    //         setSystem(system => system.step())\n    //         setPlanets(system.planets)\n    //         console.log(system.planets.map(planet => planet.position))\n    //     },500)\n    //     return () => clearInterval(interval)\n    // }, [])\n\n\n    const intervalFunc = () => {\n        setSystem(system => system.step())\n        setPlanets(system.planets)\n        this.forceUpdate()\n    }\n\n    const interval = setInterval(intervalFunc,500)\n\n    return (\n        <div className=\"space\">\n            {entities}\n        </div>\n    )\n}\n\nexport default SystemDisplay"]},"metadata":{},"sourceType":"module"}