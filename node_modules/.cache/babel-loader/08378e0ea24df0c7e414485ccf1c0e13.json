{"ast":null,"code":"import Vector from './Vector';\nimport Direction from '/.Direction';\n\nclass Path {\n  velocity(time) {\n    let previousPosition = this.position(time - 1);\n    let currentPosition;\n\n    if (previousPosition == null) {\n      previousPosition = this.position(time);\n      currentPosition = this.position(time + 1);\n    } else {\n      currentPosition = this.position(time);\n    }\n\n    return Vector.subtract(currentPosition, previousPosition);\n  }\n\n  speed(time) {\n    const v = this.velocity(time);\n    return (v[0] ** 2 + v[1] ** 2) ** 0.5;\n  }\n\n  direction(time) {\n    return Direction.fromVelocity(...this.velocity(time));\n  }\n\n  negativeDirection(time) {\n    return Direction.subtract(this.direction(time), Math.PI);\n  }\n\n  checkTime(time) {\n    if (this.startTime && this.startTime > time) {\n      return false;\n    }\n\n    if (this.endTime && this.endTime < time) {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\nexport default Path;","map":{"version":3,"sources":["/home/jim/projects/space/src/classes/Path.js"],"names":["Vector","Direction","Path","velocity","time","previousPosition","position","currentPosition","subtract","speed","v","direction","fromVelocity","negativeDirection","Math","PI","checkTime","startTime","endTime"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,IAAN,CAAW;AAEPC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACX,QAAIC,gBAAgB,GAAG,KAAKC,QAAL,CAAcF,IAAI,GAAG,CAArB,CAAvB;AACA,QAAIG,eAAJ;;AACA,QAAIF,gBAAgB,IAAI,IAAxB,EAA8B;AAC1BA,MAAAA,gBAAgB,GAAG,KAAKC,QAAL,CAAcF,IAAd,CAAnB;AACAG,MAAAA,eAAe,GAAG,KAAKD,QAAL,CAAcF,IAAI,GAAG,CAArB,CAAlB;AACH,KAHD,MAGO;AACHG,MAAAA,eAAe,GAAG,KAAKD,QAAL,CAAcF,IAAd,CAAlB;AACH;;AACD,WAAOJ,MAAM,CAACQ,QAAP,CAAgBD,eAAhB,EAAiCF,gBAAjC,CAAP;AACH;;AAEDI,EAAAA,KAAK,CAACL,IAAD,EAAO;AACR,UAAMM,CAAC,GAAG,KAAKP,QAAL,CAAcC,IAAd,CAAV;AACA,WAAO,CAACM,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAR,GAAYA,CAAC,CAAC,CAAD,CAAD,IAAQ,CAArB,KAA2B,GAAlC;AACH;;AAEDC,EAAAA,SAAS,CAACP,IAAD,EAAO;AACZ,WAAOH,SAAS,CAACW,YAAV,CAAuB,GAAG,KAAKT,QAAL,CAAcC,IAAd,CAA1B,CAAP;AACH;;AAEDS,EAAAA,iBAAiB,CAACT,IAAD,EAAO;AACpB,WAAOH,SAAS,CAACO,QAAV,CAAmB,KAAKG,SAAL,CAAeP,IAAf,CAAnB,EAAyCU,IAAI,CAACC,EAA9C,CAAP;AACH;;AAEDC,EAAAA,SAAS,CAACZ,IAAD,EAAO;AACZ,QAAI,KAAKa,SAAL,IAAkB,KAAKA,SAAL,GAAiBb,IAAvC,EAA6C;AACzC,aAAO,KAAP;AACH;;AACD,QAAI,KAAKc,OAAL,IAAgB,KAAKA,OAAL,GAAed,IAAnC,EAAyC;AACrC,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAnCM;;AAuCX,eAAeF,IAAf","sourcesContent":["import Vector from './Vector'\nimport Direction from '/.Direction'\n\nclass Path {\n\n    velocity(time) {\n        let previousPosition = this.position(time - 1)\n        let currentPosition\n        if (previousPosition == null) {\n            previousPosition = this.position(time)\n            currentPosition = this.position(time + 1)\n        } else {\n            currentPosition = this.position(time)\n        }\n        return Vector.subtract(currentPosition, previousPosition)\n    }\n\n    speed(time) {\n        const v = this.velocity(time)\n        return (v[0] ** 2 + v[1] ** 2) ** 0.5\n    }\n\n    direction(time) {\n        return Direction.fromVelocity(...this.velocity(time))\n    }\n\n    negativeDirection(time) {\n        return Direction.subtract(this.direction(time), Math.PI)\n    }\n\n    checkTime(time) {\n        if (this.startTime && this.startTime > time) {\n            return false\n        }\n        if (this.endTime && this.endTime < time) {\n            return false\n        }\n        return true\n    }\n\n}\n\nexport default Path"]},"metadata":{},"sourceType":"module"}