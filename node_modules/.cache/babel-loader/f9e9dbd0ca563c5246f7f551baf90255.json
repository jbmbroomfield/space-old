{"ast":null,"code":"function mult(number, point) {\n  return [number * point[0], number * point[1]];\n}\n\nfunction add(point1, point2) {\n  return [point1[0] + point2[0], point1[1] + point2[1]];\n}\n\nfunction getPosition(p0, p1, t) {\n  const term1 = mult(1 - t, p0);\n  const term2 = mult(t, p1);\n  return add(term1, term2);\n}\n\nclass Bezier {\n  constructor(startTime, endTime, ...points) {\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.points = points;\n  }\n\n  position(time) {\n    if (time < this.startTime) {\n      return this.points[0];\n    }\n\n    if (time > this.endTime) {\n      return this.points[this.points.length - 1];\n    }\n\n    const t = (time - this.startTime) / (this.endTime - this.startTime);\n\n    if (this.points.length === 2) {\n      const [p0, p1] = this.points;\n      return getPosition(p0, p1, t);\n    }\n  }\n\n}\n\nexport default Bezier;","map":{"version":3,"sources":["/home/jim/projects/space/src/classes/Bezier.js"],"names":["mult","number","point","add","point1","point2","getPosition","p0","p1","t","term1","term2","Bezier","constructor","startTime","endTime","points","position","time","length"],"mappings":"AAAA,SAASA,IAAT,CAAcC,MAAd,EAAsBC,KAAtB,EAA6B;AACzB,SAAO,CAACD,MAAM,GAAGC,KAAK,CAAC,CAAD,CAAf,EAAoBD,MAAM,GAAGC,KAAK,CAAC,CAAD,CAAlC,CAAP;AACH;;AAED,SAASC,GAAT,CAAaC,MAAb,EAAqBC,MAArB,EAA6B;AACzB,SAAO,CAACD,MAAM,CAAC,CAAD,CAAN,GAAYC,MAAM,CAAC,CAAD,CAAnB,EAAwBD,MAAM,CAAC,CAAD,CAAN,GAAYC,MAAM,CAAC,CAAD,CAA1C,CAAP;AACH;;AAED,SAASC,WAAT,CAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,CAA7B,EAAgC;AAC5B,QAAMC,KAAK,GAAGV,IAAI,CAAC,IAAIS,CAAL,EAAQF,EAAR,CAAlB;AACA,QAAMI,KAAK,GAAGX,IAAI,CAACS,CAAD,EAAID,EAAJ,CAAlB;AACA,SAAOL,GAAG,CAACO,KAAD,EAAQC,KAAR,CAAV;AACH;;AAED,MAAMC,MAAN,CAAa;AAETC,EAAAA,WAAW,CAACC,SAAD,EAAYC,OAAZ,EAAqB,GAAGC,MAAxB,EAAgC;AACvC,SAAKF,SAAL,GAAiBA,SAAjB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AAEDC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACX,QAAIA,IAAI,GAAG,KAAKJ,SAAhB,EAA2B;AACvB,aAAO,KAAKE,MAAL,CAAY,CAAZ,CAAP;AACH;;AACD,QAAIE,IAAI,GAAG,KAAKH,OAAhB,EAAyB;AACrB,aAAO,KAAKC,MAAL,CAAY,KAAKA,MAAL,CAAYG,MAAZ,GAAqB,CAAjC,CAAP;AACH;;AACD,UAAMV,CAAC,GAAG,CAACS,IAAI,GAAG,KAAKJ,SAAb,KAA2B,KAAKC,OAAL,GAAe,KAAKD,SAA/C,CAAV;;AACA,QAAI,KAAKE,MAAL,CAAYG,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,YAAM,CAACZ,EAAD,EAAKC,EAAL,IAAW,KAAKQ,MAAtB;AACA,aAAOV,WAAW,CAACC,EAAD,EAAKC,EAAL,EAASC,CAAT,CAAlB;AACH;AACJ;;AApBQ;;AAuBb,eAAeG,MAAf","sourcesContent":["function mult(number, point) {\n    return [number * point[0], number * point[1]]\n}\n\nfunction add(point1, point2) {\n    return [point1[0] + point2[0], point1[1] + point2[1]]\n}\n\nfunction getPosition(p0, p1, t) {\n    const term1 = mult(1 - t, p0)\n    const term2 = mult(t, p1)\n    return add(term1, term2)\n}\n\nclass Bezier {\n\n    constructor(startTime, endTime, ...points) {\n        this.startTime = startTime\n        this.endTime = endTime\n        this.points = points\n    }\n\n    position(time) {\n        if (time < this.startTime) {\n            return this.points[0]\n        }\n        if (time > this.endTime) {\n            return this.points[this.points.length - 1]\n        }\n        const t = (time - this.startTime) / (this.endTime - this.startTime)\n        if (this.points.length === 2) {\n            const [p0, p1] = this.points\n            return getPosition(p0, p1, t)\n        }\n    }\n}\n\nexport default Bezier"]},"metadata":{},"sourceType":"module"}