{"ast":null,"code":"import Planet from './Planet';\n\nclass System {\n  constructor() {\n    this.planets = [];\n    this.steps = 0;\n  }\n\n  step() {\n    this.steps++;\n\n    for (const planet of this.planets) {\n      planet.color !== 'yellow' && planet.step();\n    }\n\n    return this;\n  }\n\n  new_planet(color, radius, x, y) {\n    const planet = new Planet(this, color, radius, x, y);\n    this.planets.push(planet);\n    return planet;\n  }\n\n}\n\nexport default System;\nconst baseSystem = new System();\nbaseSystem.new_planet('yellow', 9, 140, 140);\nbaseSystem.new_planet('red', 5, 120, 80);\nexport { baseSystem };","map":{"version":3,"sources":["/home/jim/projects/space/src/classes/System.js"],"names":["Planet","System","constructor","planets","steps","step","planet","color","new_planet","radius","x","y","push","baseSystem"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,MAAN,CAAa;AAETC,EAAAA,WAAW,GAAG;AACV,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,KAAL,GAAa,CAAb;AACH;;AAEDC,EAAAA,IAAI,GAAG;AACH,SAAKD,KAAL;;AACA,SAAK,MAAME,MAAX,IAAqB,KAAKH,OAA1B,EAAmC;AAC/BG,MAAAA,MAAM,CAACC,KAAP,KAAiB,QAAjB,IAA6BD,MAAM,CAACD,IAAP,EAA7B;AACH;;AACD,WAAO,IAAP;AACH;;AAEDG,EAAAA,UAAU,CAACD,KAAD,EAAQE,MAAR,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC5B,UAAML,MAAM,GAAG,IAAIN,MAAJ,CAAW,IAAX,EAAiBO,KAAjB,EAAwBE,MAAxB,EAAgCC,CAAhC,EAAmCC,CAAnC,CAAf;AACA,SAAKR,OAAL,CAAaS,IAAb,CAAkBN,MAAlB;AACA,WAAOA,MAAP;AACH;;AAnBQ;;AAuBb,eAAeL,MAAf;AAEA,MAAMY,UAAU,GAAG,IAAIZ,MAAJ,EAAnB;AAEAY,UAAU,CAACL,UAAX,CAAsB,QAAtB,EAAgC,CAAhC,EAAmC,GAAnC,EAAwC,GAAxC;AAEAK,UAAU,CAACL,UAAX,CAAsB,KAAtB,EAA6B,CAA7B,EAAgC,GAAhC,EAAqC,EAArC;AAEA,SAASK,UAAT","sourcesContent":["import Planet from './Planet'\n\nclass System {\n\n    constructor() {\n        this.planets = []\n        this.steps = 0\n    }\n\n    step() {\n        this.steps++\n        for (const planet of this.planets) {\n            planet.color !== 'yellow' && planet.step() \n        }\n        return this\n    }\n\n    new_planet(color, radius, x, y) {\n        const planet = new Planet(this, color, radius, x, y)\n        this.planets.push(planet)\n        return planet\n    }\n\n}\n\nexport default System\n\nconst baseSystem = new System()\n\nbaseSystem.new_planet('yellow', 9, 140, 140)\n\nbaseSystem.new_planet('red', 5, 120, 80)\n\nexport { baseSystem }"]},"metadata":{},"sourceType":"module"}