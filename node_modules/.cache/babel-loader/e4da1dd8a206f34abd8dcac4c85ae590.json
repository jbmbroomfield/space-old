{"ast":null,"code":"class Vector {\n  static add(v, w) {\n    return [v[0] + w[0], v[1] + w[1]];\n  }\n\n  static negative(v) {\n    return [-v[0], -v[1]];\n  }\n\n  static subtract(v, w) {\n    return this.add(v, this.negative(w));\n  }\n\n  static multiply(a, v) {\n    return [a * v[0], a * v[1]];\n  }\n\n  static abs(v) {\n    return (v[0] ** 2 + v[1] ** 2) ** 0.5;\n  }\n\n  static unitVector(v) {\n    return this.multiply(this.abs(v), v);\n  }\n\n  static rotate(v, c, angle) {\n    const [x, y] = this.subtract(v, c);\n    const x_ = x * Math.cos(angle) + y * Math.sin(angle);\n    const y_ = -x * Math.sin(angle) + y * Math.cos(angle);\n    return this.add([x_, y_], c);\n  }\n\n  static build(origin, rotation, distance) {\n    const x = distance * Math.sin(rotation);\n    const y = distance * Math.cos(rotation);\n    return this.add([x, y], origin);\n  }\n\n}\n\nexport default Vector;","map":{"version":3,"sources":["/home/jim/projects/space/src/classes/Vector.js"],"names":["Vector","add","v","w","negative","subtract","multiply","a","abs","unitVector","rotate","c","angle","x","y","x_","Math","cos","sin","y_","build","origin","rotation","distance"],"mappings":"AAAA,MAAMA,MAAN,CAAa;AAEC,SAAHC,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACb,WAAO,CAACD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAT,EAAcD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAtB,CAAP;AACH;;AAEc,SAARC,QAAQ,CAACF,CAAD,EAAI;AACf,WAAO,CAAC,CAACA,CAAC,CAAC,CAAD,CAAH,EAAQ,CAACA,CAAC,CAAC,CAAD,CAAV,CAAP;AACH;;AAEc,SAARG,QAAQ,CAACH,CAAD,EAAIC,CAAJ,EAAO;AAClB,WAAO,KAAKF,GAAL,CAASC,CAAT,EAAY,KAAKE,QAAL,CAAcD,CAAd,CAAZ,CAAP;AACH;;AAEc,SAARG,QAAQ,CAACC,CAAD,EAAIL,CAAJ,EAAO;AAClB,WAAO,CAACK,CAAC,GAAGL,CAAC,CAAC,CAAD,CAAN,EAAWK,CAAC,GAAGL,CAAC,CAAC,CAAD,CAAhB,CAAP;AACH;;AAES,SAAHM,GAAG,CAACN,CAAD,EAAI;AACV,WAAO,CAACA,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAR,GAAYA,CAAC,CAAC,CAAD,CAAD,IAAQ,CAArB,KAA2B,GAAlC;AACH;;AAEgB,SAAVO,UAAU,CAACP,CAAD,EAAI;AACjB,WAAO,KAAKI,QAAL,CAAc,KAAKE,GAAL,CAASN,CAAT,CAAd,EAA2BA,CAA3B,CAAP;AACH;;AAEY,SAANQ,MAAM,CAACR,CAAD,EAAIS,CAAJ,EAAOC,KAAP,EAAc;AACvB,UAAM,CAACC,CAAD,EAAIC,CAAJ,IAAS,KAAKT,QAAL,CAAcH,CAAd,EAAiBS,CAAjB,CAAf;AACA,UAAMI,EAAE,GAAGF,CAAC,GAAGG,IAAI,CAACC,GAAL,CAASL,KAAT,CAAJ,GAAsBE,CAAC,GAAGE,IAAI,CAACE,GAAL,CAASN,KAAT,CAArC;AACA,UAAMO,EAAE,GAAG,CAACN,CAAD,GAAKG,IAAI,CAACE,GAAL,CAASN,KAAT,CAAL,GAAuBE,CAAC,GAAGE,IAAI,CAACC,GAAL,CAASL,KAAT,CAAtC;AACA,WAAO,KAAKX,GAAL,CAAS,CAACc,EAAD,EAAKI,EAAL,CAAT,EAAmBR,CAAnB,CAAP;AACH;;AAEW,SAALS,KAAK,CAACC,MAAD,EAASC,QAAT,EAAmBC,QAAnB,EAA6B;AACrC,UAAMV,CAAC,GAAGU,QAAQ,GAAGP,IAAI,CAACE,GAAL,CAASI,QAAT,CAArB;AACA,UAAMR,CAAC,GAAGS,QAAQ,GAAGP,IAAI,CAACC,GAAL,CAASK,QAAT,CAArB;AACA,WAAO,KAAKrB,GAAL,CAAS,CAACY,CAAD,EAAIC,CAAJ,CAAT,EAAiBO,MAAjB,CAAP;AACH;;AArCQ;;AAyCb,eAAerB,MAAf","sourcesContent":["class Vector {\n\n    static add(v, w) {\n        return [v[0] + w[0], v[1] + w[1]]\n    }\n\n    static negative(v) {\n        return [-v[0], -v[1]]\n    }\n\n    static subtract(v, w) {\n        return this.add(v, this.negative(w))\n    }\n\n    static multiply(a, v) {\n        return [a * v[0], a * v[1]]\n    }\n\n    static abs(v) {\n        return (v[0] ** 2 + v[1] ** 2) ** 0.5\n    }\n\n    static unitVector(v) {\n        return this.multiply(this.abs(v), v)\n    }\n\n    static rotate(v, c, angle) {\n        const [x, y] = this.subtract(v, c);\n        const x_ = x * Math.cos(angle) + y * Math.sin(angle)\n        const y_ = -x * Math.sin(angle) + y * Math.cos(angle)\n        return this.add([x_, y_], c)\n    }\n\n    static build(origin, rotation, distance) {\n        const x = distance * Math.sin(rotation)\n        const y = distance * Math.cos(rotation)\n        return this.add([x, y], origin)\n    }\n\n}\n\nexport default Vector"]},"metadata":{},"sourceType":"module"}