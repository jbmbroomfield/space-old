{"ast":null,"code":"import Vector from './Vector';\n\nfunction directionYZero(x) {\n  if (x === 0) {\n    return 0;\n  }\n\n  if (x > 0) {\n    return Math.PI / 2;\n  }\n\n  return Math.PI * 3 / 2;\n}\n\nfunction directionFromVelocity(x, y) {\n  if (y === 0) {\n    return directionYZero(x);\n  }\n\n  let result = Math.atan(x / y);\n\n  if (y < 0) {\n    result += Math.PI;\n  }\n\n  return result;\n}\n\nclass Path {\n  velocity(time) {\n    let previousPosition = this.position(time - 1);\n    let currentPosition;\n\n    if (previousPosition == null) {\n      previousPosition = this.position(time);\n      currentPosition = this.position(time + 1);\n    } else {\n      currentPosition = this.position(time);\n    }\n\n    return Vector.subtract(currentPosition, previousPosition);\n  }\n\n  speed(time) {\n    const v = this.velocity(time);\n    return (v[0] ** 2 + v[1] ** 2) ** 0.5;\n  }\n\n  direction(time) {\n    return directionFromVelocity(this.velocity(time));\n  }\n\n}\n\nexport default Path;","map":{"version":3,"sources":["/home/jim/projects/space/src/classes/Path.js"],"names":["Vector","directionYZero","x","Math","PI","directionFromVelocity","y","result","atan","Path","velocity","time","previousPosition","position","currentPosition","subtract","speed","v","direction"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;;AAEA,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;AACvB,MAAIA,CAAC,KAAK,CAAV,EAAa;AACT,WAAO,CAAP;AACH;;AACD,MAAIA,CAAC,GAAG,CAAR,EAAW;AACP,WAAOC,IAAI,CAACC,EAAL,GAAQ,CAAf;AACH;;AACD,SAAOD,IAAI,CAACC,EAAL,GAAQ,CAAR,GAAU,CAAjB;AACH;;AAED,SAASC,qBAAT,CAA+BH,CAA/B,EAAiCI,CAAjC,EAAoC;AAChC,MAAIA,CAAC,KAAK,CAAV,EAAa;AACT,WAAOL,cAAc,CAACC,CAAD,CAArB;AACH;;AACD,MAAIK,MAAM,GAAGJ,IAAI,CAACK,IAAL,CAAUN,CAAC,GAACI,CAAZ,CAAb;;AACA,MAAIA,CAAC,GAAG,CAAR,EAAW;AACPC,IAAAA,MAAM,IAAIJ,IAAI,CAACC,EAAf;AACH;;AACD,SAAOG,MAAP;AACH;;AAED,MAAME,IAAN,CAAW;AAEPC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACX,QAAIC,gBAAgB,GAAG,KAAKC,QAAL,CAAcF,IAAI,GAAG,CAArB,CAAvB;AACA,QAAIG,eAAJ;;AACA,QAAIF,gBAAgB,IAAI,IAAxB,EAA8B;AAC1BA,MAAAA,gBAAgB,GAAG,KAAKC,QAAL,CAAcF,IAAd,CAAnB;AACAG,MAAAA,eAAe,GAAG,KAAKD,QAAL,CAAcF,IAAI,GAAG,CAArB,CAAlB;AACH,KAHD,MAGO;AACHG,MAAAA,eAAe,GAAG,KAAKD,QAAL,CAAcF,IAAd,CAAlB;AACH;;AACD,WAAOX,MAAM,CAACe,QAAP,CAAgBD,eAAhB,EAAiCF,gBAAjC,CAAP;AACH;;AAEDI,EAAAA,KAAK,CAACL,IAAD,EAAO;AACR,UAAMM,CAAC,GAAG,KAAKP,QAAL,CAAcC,IAAd,CAAV;AACA,WAAO,CAACM,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAR,GAAYA,CAAC,CAAC,CAAD,CAAD,IAAQ,CAArB,KAA2B,GAAlC;AACH;;AAEDC,EAAAA,SAAS,CAACP,IAAD,EAAO;AACZ,WAAON,qBAAqB,CAAC,KAAKK,QAAL,CAAcC,IAAd,CAAD,CAA5B;AACH;;AArBM;;AAyBX,eAAeF,IAAf","sourcesContent":["import Vector from './Vector'\n\nfunction directionYZero(x) {\n    if (x === 0) {\n        return 0\n    }\n    if (x > 0) {\n        return Math.PI/2\n    }\n    return Math.PI*3/2\n}\n\nfunction directionFromVelocity(x,y) {\n    if (y === 0) {\n        return directionYZero(x)\n    }\n    let result = Math.atan(x/y)\n    if (y < 0) {\n        result += Math.PI\n    }\n    return result\n}\n\nclass Path {\n\n    velocity(time) {\n        let previousPosition = this.position(time - 1)\n        let currentPosition\n        if (previousPosition == null) {\n            previousPosition = this.position(time)\n            currentPosition = this.position(time + 1)\n        } else {\n            currentPosition = this.position(time)\n        }\n        return Vector.subtract(currentPosition, previousPosition)\n    }\n\n    speed(time) {\n        const v = this.velocity(time)\n        return (v[0] ** 2 + v[1] ** 2) ** 0.5\n    }\n\n    direction(time) {\n        return directionFromVelocity(this.velocity(time))\n    }\n\n}\n\nexport default Path"]},"metadata":{},"sourceType":"module"}