{"ast":null,"code":"function mult(number, point) {\n  return [number * point[0], number * point[1]];\n}\n\nfunction add(point1, point2) {\n  return [point1[0] + point2[0], point1[1] + point2[1]];\n}\n\nfunction neg(point) {\n  return mult(-1, point);\n}\n\nfunction subtract(point1, point2) {\n  return add(point1, neg(point2));\n}\n\nfunction getPosition(p0, p1, t) {\n  const term1 = mult(1 - t, p0);\n  const term2 = mult(t, p1);\n  return add(term1, term2);\n}\n\nclass Bezier {\n  constructor(startTime, endTime, ...points) {\n    this.startTime = startTime;\n    this.endTime = endTime;\n\n    if (points.length == 1) {\n      this.initial = points[0];\n      this.final = points[0];\n    } else {\n      this.initial = new Bezier(startTime, endTime, ...points.slice(0, points.length - 1));\n      this.final = new Bezier(startTime, endTime, ...points.slice(1, points.length));\n    }\n  }\n\n  position(time) {\n    if (time < this.startTime) {\n      time = this.startTime;\n    }\n\n    if (time > this.endTime) {\n      time = this.endTime;\n    }\n\n    const t = (time - this.startTime) / (this.endTime - this.startTime);\n    return this.position_by_t(t);\n  }\n\n  position_by_t(t) {\n    if (this.initial == this.final) {\n      return this.initial;\n    }\n\n    const p0 = this.initial.position_by_t(t);\n    const p1 = this.final.position_by_t(t);\n    return getPosition(p0, p1, t);\n  }\n\n  velocity(time) {\n    if (time == this.startTime) {\n      time += 1;\n    }\n\n    return subtract(this.position(time), this.position(time - 1));\n  }\n\n  speed(time) {\n    const v = this.velocity(time);\n    return (v[0] ** 2 + v[1] ** 2) ** 0.5;\n  }\n\n  get initial_velocity() {\n    return this.velocity(this.startTime);\n  }\n\n  get initial_speed() {\n    return this.speed(this.startTime);\n  }\n\n  get max_speed() {\n    let return_value = 0;\n\n    for (let time = this.startTime; time <= this.endTime; time++) {\n      return_value = math.max(return_value, this.speed(time));\n    }\n\n    return return_value;\n  }\n\n}\n\nexport default Bezier;","map":{"version":3,"sources":["/home/jim/projects/space/src/classes/Bezier.js"],"names":["mult","number","point","add","point1","point2","neg","subtract","getPosition","p0","p1","t","term1","term2","Bezier","constructor","startTime","endTime","points","length","initial","final","slice","position","time","position_by_t","velocity","speed","v","initial_velocity","initial_speed","max_speed","return_value","math","max"],"mappings":"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","sourcesContent":["function mult(number, point) {\n    return [number * point[0], number * point[1]]\n}\n\nfunction add(point1, point2) {\n    return [point1[0] + point2[0], point1[1] + point2[1]]\n}\n\nfunction neg(point) {\n    return mult(-1, point)\n}\n\nfunction subtract(point1, point2) {\n    return add(point1, neg(point2))\n}\n\nfunction getPosition(p0, p1, t) {\n    const term1 = mult(1 - t, p0)\n    const term2 = mult(t, p1)\n    return add(term1, term2)\n}\n\nclass Bezier {\n\n    constructor(startTime, endTime, ...points) {\n        this.startTime = startTime\n        this.endTime = endTime\n        if (points.length == 1) {\n            this.initial = points[0]\n            this.final = points[0]\n        } else {\n            this.initial = new Bezier(startTime, endTime, ...points.slice(0, points.length - 1))\n            this.final = new Bezier(startTime, endTime, ...points.slice(1, points.length))\n        }\n    }\n\n    position(time) {\n        if (time < this.startTime) {\n            time = this.startTime\n        }\n        if (time > this.endTime) {\n            time = this.endTime\n        }\n        const t = (time - this.startTime) / (this.endTime - this.startTime)\n        return this.position_by_t(t)\n    }\n\n    position_by_t(t) {\n        if (this.initial == this.final) {\n            return this.initial\n        }\n        const p0 = this.initial.position_by_t(t)\n        const p1 = this.final.position_by_t(t)\n        return getPosition(p0, p1, t)\n    }\n\n    velocity(time) {\n        if (time == this.startTime) {\n            time += 1\n        }\n        return subtract(this.position(time), this.position(time - 1))\n    }\n\n    speed(time) {\n        const v = this.velocity(time)\n        return (v[0]**2 + v[1]**2)**0.5\n    }\n\n    get initial_velocity() {\n        return this.velocity(this.startTime)\n    }\n\n    get initial_speed() {\n        return this.speed(this.startTime)\n    }\n\n    get max_speed() {\n        let return_value = 0\n        for (let time = this.startTime; time <= this.endTime; time++) {\n            return_value = math.max(return_value, this.speed(time))\n        }\n        return return_value\n    }\n}\n\nexport default Bezier"]},"metadata":{},"sourceType":"module"}